import 'reflect-metadata';
import React from 'react';
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

async function getWebsiteName(): Promise<string> {
  try {
    const response = await fetch(
      `${process.env.NEXTAUTH_URL || 'http://localhost:3000'}/api/settings/name`,
      {
        cache: 'no-store', // Always fetch fresh data for metadata
      }
    );
    const data = await response.json();
    return data.name || 'Shower';
  } catch (error) {
    console.error('Failed to fetch website name:', error);
    return 'Shower'; // Default
  }
}

export async function generateMetadata(): Promise<Metadata> {
  const websiteName = await getWebsiteName();

  return {
    title: websiteName,
    description: 'Generated by create next app',
  };
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
