---
description: Rules for writing and maintaining unit tests with Jest, ensuring consistency, readability, and adherence to best practices.
globs: test/unit/**/*.test.ts
alwaysApply: false
---

Sub rule 1: Test Structure
- Name test files as `ModuleName.test.ts`
- Group related tests using `describe` blocks 
- Write meaningful test names

Sub rule 2: Jest Matchers/Expectations
- Use `toBe` for primitive comparisons
- Use `toEqual` for object/array deep equality
- Avoid negated assertions (e.g., `not`) unless necessary

Sub rule 3: Mocks and Spies
- Use `jest.fn()` for function mocks
- Cleanup mocks after each test with `afterEach`
- Use spies only when validating internal calls

Sub rule 4: Test Isolation
- No shared state between tests
- Avoid relying on external resources
- Use dependency injection for external dependencies

Sub rule 5: Coverage
- Cover edge cases and invalid inputs
- Avoid excessive mocking leading to false positives
- Ensure meaningful assertions to validate outputs
